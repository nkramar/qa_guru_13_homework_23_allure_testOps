plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.9.6'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.18.1",
    selenideVersion = "6.6.6",
    restAssuredVersion = "5.1.1",
    junitVersion = "5.8.2",
    slf4jVersion = "1.7.32",
    ownerVersion = "1.0.12",
    javaFakerVersion = "1.0.2"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion"
    )
    implementation("commons-io:commons-io:2.6")
    implementation("io.qameta.allure:allure-java-commons:2.14.0")
    implementation("org.junit.jupiter:junit-jupiter-api:5.8.2")

}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task ui_tests(type: Test) {
    useJUnitPlatform {
        includeTags 'UI'
    }
}

task api_tests(type: Test) {
    useJUnitPlatform {
        includeTags 'API'
    }
}